doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/css/style.css')
    link(rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous")
    script(src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/showdown/1.8.6/showdown.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment.min.js")
    script(src="https://cdn.steemjs.com/lib/latest/steem.min.js")
    script(src="/js/main.js")
    style.
      html, body{
      margin: 0;
      height: 100%;
      }
      iframe{
      border: 0;
      }
    script.
      if (isIOS()) {
      window.addEventListener('devicemotion', function(e) {
      document.getElementById('theIframe').contentWindow.postMessage({
      type: 'devicemotion',
      deviceMotionEvent: cloneDeviceMotionEvent(e),
      }, '*');
      });
      }
      function isIOS() {
      return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      }
      function cloneDeviceMotionEvent(e) {
      return {
      acceleration: {
      x: e.acceleration.x,
      y: e.acceleration.y,
      z: e.acceleration.z,
      },
      accelerationIncludingGravity: {
      x: e.accelerationIncludingGravity.x,
      y: e.accelerationIncludingGravity.y,
      z: e.accelerationIncludingGravity.z,
      },
      rotationRate: {
      alpha: e.rotationRate.alpha,
      beta: e.rotationRate.beta,
      gamma: e.rotationRate.gamma,
      },
      interval: e.interval,
      timeStamp: e.timeStamp
      };
      }
      if (window.addEventListener) {
      window.addEventListener("message", onMessage, false);
      }
      else if (window.attachEvent) {
      window.attachEvent("onmessage", onMessage, false);
      }
      function onMessage(event) {
      if (event.origin !== "https://ipfs.io") return;
      var data = event.data;
      if (typeof(window[data.func]) == "function") {
      window[data.func].call(null, data.message);
      }
      }
      function vote(message) {
      $.post({
      url: '/post/vote/',
      dataType: 'json',
      data: {
      'permlink': '#{permlink}',
      'author': '#{username}',
      'weight': message
      }
      }, (response) => {
      steem.api.getState(`/#{category}/@#{username}/#{permlink}`, (err, result) => {
      var target = document.getElementById('theIframe').contentWindow
      target.postMessage({
      'func': 'steemState',
      'message': result,
      }, "*");
      })
      })
      }
      function aVote(message) {
      $.post({
      url: '/post/vote/',
      dataType: 'json',
      data: {
      'permlink': message.permlink,
      'author': message.author,
      'weight': message.weight
      }}, (response) => {
      console.log(response)
      var target = document.getElementById('theIframe').contentWindow
      target.postMessage({
      'func': 'voteMsg',
      'message': stateObject
      }, "*");
      });
      }
      function sendLink(link) {
      if (link == '/' || link == '/auth') { setCookie('dropOff', `/#{category}/@#{username}/#{permlink}`, 15); }
      location.href = '/auth';
      }
      function iloaded(){
      steem.api.getState(`/#{category}/@#{username}/#{permlink}`, (err, result) => {
      var target = document.getElementById('theIframe').contentWindow
      target.postMessage({
      'func': 'iAm',
      'message': '#{iAm}',
      }, "*");
      target.postMessage({
      'func': 'key',
      'message': '#{username}/#{permlink}',
      }, "*");
      target.postMessage({
      'func': 'steemState',
      'message': result,
      }, "*");
      })
      }
    script.
      steem.api.getState(`/#{category}/@#{username}/#{permlink}`, (err, result) => {
      console.log(result)
      var sux = '#{username}/#{permlink}'
      var metadata = result.content[sux].json_metadata
      var hashy = JSON.parse(metadata).vrHash
      if (hashy.char[1] != 't') {
        hashy = 'https://ipfs.io/ipfs/' + hashy
      }
      var iframe = document.createElement('iframe');
      iframe.allowvr = 'yes'
      iframe.id = 'theIframe'
      iframe.allowfullscreen = 'yes'
      iframe.scrolling = 'no'
      iframe.width = '100%'
      iframe.height = '100%'
      iframe.setAttribute('allowfullscreen', true)
      iframe.setAttribute('allow', 'gyroscope; accelerometer; microphone https://ipfs.io https://dlux.io;')
      iframe.src = hashy
      document.body.appendChild(iframe);
      })
    body
